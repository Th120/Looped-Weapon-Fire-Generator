#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.5
#  in conjunction with Tcl version 8.6
#    Oct 18, 2020 06:18:02 PM CEST  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import weapon_fire_loop_generator_ui_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    weapon_fire_loop_generator_ui_support.set_Tk_var()
    top = Toplevel (root)
    weapon_fire_loop_generator_ui_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    weapon_fire_loop_generator_ui_support.set_Tk_var()
    top = Toplevel (w)
    weapon_fire_loop_generator_ui_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel():
    global w
    w.destroy()
    w = None

class Toplevel:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("1185x592+-1502+567")
        top.minsize(120, 1)
        top.maxsize(4484, 1421)
        top.resizable(1,  1)
        top.title("Weapon Fire Loop Generator")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.FrameSampleProperties = tk.Frame(top)
        self.FrameSampleProperties.place(relx=0.599, rely=0.051, relheight=0.444
                , relwidth=0.386)
        self.FrameSampleProperties.configure(relief='groove')
        self.FrameSampleProperties.configure(borderwidth="2")
        self.FrameSampleProperties.configure(relief="groove")
        self.FrameSampleProperties.configure(background="#d9d9d9")
        self.FrameSampleProperties.configure(highlightbackground="#d9d9d9")
        self.FrameSampleProperties.configure(highlightcolor="black")

        self.LabelVolumeSample = tk.Label(self.FrameSampleProperties)
        self.LabelVolumeSample.place(relx=0.656, rely=0.19, height=21, width=94)
        self.LabelVolumeSample.configure(activebackground="#f9f9f9")
        self.LabelVolumeSample.configure(activeforeground="black")
        self.LabelVolumeSample.configure(anchor='nw')
        self.LabelVolumeSample.configure(background="#d9d9d9")
        self.LabelVolumeSample.configure(disabledforeground="#a3a3a3")
        self.LabelVolumeSample.configure(foreground="#000000")
        self.LabelVolumeSample.configure(highlightbackground="#d9d9d9")
        self.LabelVolumeSample.configure(highlightcolor="black")
        self.LabelVolumeSample.configure(text='''Volume''')

        self.LabelMaxVolumeSample = tk.Label(self.FrameSampleProperties)
        self.LabelMaxVolumeSample.place(relx=0.656, rely=0.266, height=21
                , width=62)
        self.LabelMaxVolumeSample.configure(activebackground="#f9f9f9")
        self.LabelMaxVolumeSample.configure(activeforeground="#000000")
        self.LabelMaxVolumeSample.configure(anchor='nw')
        self.LabelMaxVolumeSample.configure(background="#d9d9d9")
        self.LabelMaxVolumeSample.configure(disabledforeground="#a3a3a3")
        self.LabelMaxVolumeSample.configure(foreground="#000000")
        self.LabelMaxVolumeSample.configure(highlightbackground="#d9d9d9")
        self.LabelMaxVolumeSample.configure(highlightcolor="black")
        self.LabelMaxVolumeSample.configure(text='''max dBFS''')

        self.LabelAVGSample = tk.Label(self.FrameSampleProperties)
        self.LabelAVGSample.place(relx=0.656, rely=0.342, height=21, width=45)
        self.LabelAVGSample.configure(activebackground="#f9f9f9")
        self.LabelAVGSample.configure(activeforeground="#000000")
        self.LabelAVGSample.configure(anchor='nw')
        self.LabelAVGSample.configure(background="#d9d9d9")
        self.LabelAVGSample.configure(disabledforeground="#a3a3a3")
        self.LabelAVGSample.configure(foreground="#000000")
        self.LabelAVGSample.configure(highlightbackground="#d9d9d9")
        self.LabelAVGSample.configure(highlightcolor="black")
        self.LabelAVGSample.configure(text='''dBFS''')

        self.SampleMaxVolume = tk.Label(self.FrameSampleProperties)
        self.SampleMaxVolume.place(relx=0.81, rely=0.266, height=21, width=58)
        self.SampleMaxVolume.configure(activebackground="#f9f9f9")
        self.SampleMaxVolume.configure(activeforeground="black")
        self.SampleMaxVolume.configure(anchor='nw')
        self.SampleMaxVolume.configure(background="#d9d9d9")
        self.SampleMaxVolume.configure(disabledforeground="#a3a3a3")
        self.SampleMaxVolume.configure(foreground="#000000")
        self.SampleMaxVolume.configure(highlightbackground="#d9d9d9")
        self.SampleMaxVolume.configure(highlightcolor="black")
        self.SampleMaxVolume.configure(text='''-12''')
        self.SampleMaxVolume.configure(textvariable=weapon_fire_loop_generator_ui_support.maxVolumeSample)

        self.SampleMaxVolumeAVG = tk.Label(self.FrameSampleProperties)
        self.SampleMaxVolumeAVG.place(relx=0.81, rely=0.342, height=21, width=58)

        self.SampleMaxVolumeAVG.configure(activebackground="#f9f9f9")
        self.SampleMaxVolumeAVG.configure(activeforeground="black")
        self.SampleMaxVolumeAVG.configure(anchor='nw')
        self.SampleMaxVolumeAVG.configure(background="#d9d9d9")
        self.SampleMaxVolumeAVG.configure(disabledforeground="#a3a3a3")
        self.SampleMaxVolumeAVG.configure(foreground="#000000")
        self.SampleMaxVolumeAVG.configure(highlightbackground="#d9d9d9")
        self.SampleMaxVolumeAVG.configure(highlightcolor="black")
        self.SampleMaxVolumeAVG.configure(text='''-12''')
        self.SampleMaxVolumeAVG.configure(textvariable=weapon_fire_loop_generator_ui_support.avgVolumeSample)

        self.LabelHeadroom = tk.Label(self.FrameSampleProperties)
        self.LabelHeadroom.place(relx=0.044, rely=0.19, height=21, width=63)
        self.LabelHeadroom.configure(activebackground="#f9f9f9")
        self.LabelHeadroom.configure(activeforeground="black")
        self.LabelHeadroom.configure(background="#d9d9d9")
        self.LabelHeadroom.configure(disabledforeground="#a3a3a3")
        self.LabelHeadroom.configure(foreground="#000000")
        self.LabelHeadroom.configure(highlightbackground="#d9d9d9")
        self.LabelHeadroom.configure(highlightcolor="black")
        self.LabelHeadroom.configure(text='''Headroom''')

        self.ButtonPlayTailSample = tk.Button(self.FrameSampleProperties)
        self.ButtonPlayTailSample.place(relx=0.656, rely=0.798, height=34
                , width=117)
        self.ButtonPlayTailSample.configure(activebackground="#ececec")
        self.ButtonPlayTailSample.configure(activeforeground="#000000")
        self.ButtonPlayTailSample.configure(background="#d9d9d9")
        self.ButtonPlayTailSample.configure(disabledforeground="#a3a3a3")
        self.ButtonPlayTailSample.configure(foreground="#000000")
        self.ButtonPlayTailSample.configure(highlightbackground="#d9d9d9")
        self.ButtonPlayTailSample.configure(highlightcolor="black")
        self.ButtonPlayTailSample.configure(pady="0")
        self.ButtonPlayTailSample.configure(text='''Play Tail Sample''')
        self.ButtonPlayTailSample.bind('<ButtonRelease-1>',lambda e:weapon_fire_loop_generator_ui_support.playTailSampleButton(e))

        self.CheckSoloSample = tk.Checkbutton(self.FrameSampleProperties)
        self.CheckSoloSample.place(relx=0.361, rely=0.856, relheight=0.095
                , relwidth=0.077)
        self.CheckSoloSample.configure(activebackground="#ececec")
        self.CheckSoloSample.configure(activeforeground="#000000")
        self.CheckSoloSample.configure(anchor='nw')
        self.CheckSoloSample.configure(background="#d9d9d9")
        self.CheckSoloSample.configure(command=weapon_fire_loop_generator_ui_support.update_sample)
        self.CheckSoloSample.configure(disabledforeground="#a3a3a3")
        self.CheckSoloSample.configure(foreground="#000000")
        self.CheckSoloSample.configure(highlightbackground="#d9d9d9")
        self.CheckSoloSample.configure(highlightcolor="black")
        self.CheckSoloSample.configure(justify='left')
        self.CheckSoloSample.configure(variable=weapon_fire_loop_generator_ui_support.checkSoloSample)

        self.LabelSoloSample = tk.Label(self.FrameSampleProperties)
        self.LabelSoloSample.place(relx=0.044, rely=0.837, height=31, width=29)
        self.LabelSoloSample.configure(activebackground="#f9f9f9")
        self.LabelSoloSample.configure(activeforeground="black")
        self.LabelSoloSample.configure(background="#d9d9d9")
        self.LabelSoloSample.configure(disabledforeground="#a3a3a3")
        self.LabelSoloSample.configure(foreground="#000000")
        self.LabelSoloSample.configure(highlightbackground="#d9d9d9")
        self.LabelSoloSample.configure(highlightcolor="black")
        self.LabelSoloSample.configure(text='''Solo''')

        self.LabelTailFadein = tk.Label(self.FrameSampleProperties)
        self.LabelTailFadein.place(relx=0.044, rely=0.76, height=21, width=81)
        self.LabelTailFadein.configure(activebackground="#f9f9f9")
        self.LabelTailFadein.configure(activeforeground="black")
        self.LabelTailFadein.configure(anchor='nw')
        self.LabelTailFadein.configure(background="#d9d9d9")
        self.LabelTailFadein.configure(disabledforeground="#a3a3a3")
        self.LabelTailFadein.configure(foreground="#000000")
        self.LabelTailFadein.configure(highlightbackground="#d9d9d9")
        self.LabelTailFadein.configure(highlightcolor="black")
        self.LabelTailFadein.configure(text='''Tail Fadein MS''')

        self.SpinboxTailFadein = tk.Spinbox(self.FrameSampleProperties, from_=1.0, to=100.0)
        self.SpinboxTailFadein.place(relx=0.372, rely=0.76, relheight=0.072
                , relwidth=0.118)
        self.SpinboxTailFadein.configure(activebackground="#f9f9f9")
        self.SpinboxTailFadein.configure(background="white")
        self.SpinboxTailFadein.configure(buttonbackground="#d9d9d9")
        self.SpinboxTailFadein.configure(command=weapon_fire_loop_generator_ui_support.update_sample)
        self.SpinboxTailFadein.configure(disabledforeground="#a3a3a3")
        self.SpinboxTailFadein.configure(font="TkDefaultFont")
        self.SpinboxTailFadein.configure(foreground="black")
        self.SpinboxTailFadein.configure(highlightbackground="black")
        self.SpinboxTailFadein.configure(highlightcolor="black")
        self.SpinboxTailFadein.configure(insertbackground="black")
        self.SpinboxTailFadein.configure(selectbackground="blue")
        self.SpinboxTailFadein.configure(selectforeground="white")
        self.SpinboxTailFadein.configure(textvariable=weapon_fire_loop_generator_ui_support.spinboxTailFadein)
        self.SpinboxTailFadein.bind('<KeyRelease>',lambda e:weapon_fire_loop_generator_ui_support.on_sample_props_changed(e))

        self.LabelTailOffset = tk.Label(self.FrameSampleProperties)
        self.LabelTailOffset.place(relx=0.044, rely=0.646, height=21, width=81)
        self.LabelTailOffset.configure(activebackground="#f9f9f9")
        self.LabelTailOffset.configure(activeforeground="black")
        self.LabelTailOffset.configure(anchor='nw')
        self.LabelTailOffset.configure(background="#d9d9d9")
        self.LabelTailOffset.configure(disabledforeground="#a3a3a3")
        self.LabelTailOffset.configure(foreground="#000000")
        self.LabelTailOffset.configure(highlightbackground="#d9d9d9")
        self.LabelTailOffset.configure(highlightcolor="black")
        self.LabelTailOffset.configure(text='''Tail Offset MS''')

        self.SpinboxTailOffset = tk.Spinbox(self.FrameSampleProperties, from_=1.0, to=100.0)
        self.SpinboxTailOffset.place(relx=0.372, rely=0.646, relheight=0.072
                , relwidth=0.118)
        self.SpinboxTailOffset.configure(activebackground="#f9f9f9")
        self.SpinboxTailOffset.configure(background="white")
        self.SpinboxTailOffset.configure(buttonbackground="#d9d9d9")
        self.SpinboxTailOffset.configure(command=weapon_fire_loop_generator_ui_support.update_sample)
        self.SpinboxTailOffset.configure(disabledforeground="#a3a3a3")
        self.SpinboxTailOffset.configure(font="TkDefaultFont")
        self.SpinboxTailOffset.configure(foreground="black")
        self.SpinboxTailOffset.configure(highlightbackground="black")
        self.SpinboxTailOffset.configure(highlightcolor="black")
        self.SpinboxTailOffset.configure(insertbackground="black")
        self.SpinboxTailOffset.configure(selectbackground="blue")
        self.SpinboxTailOffset.configure(selectforeground="white")
        self.SpinboxTailOffset.configure(textvariable=weapon_fire_loop_generator_ui_support.spinboxTailOffset)
        self.SpinboxTailOffset.bind('<KeyRelease>',lambda e:weapon_fire_loop_generator_ui_support.on_sample_props_changed(e))

        self.SpinboxRandOffsetSample = tk.Spinbox(self.FrameSampleProperties, from_=1.0, to=100.0)
        self.SpinboxRandOffsetSample.place(relx=0.372, rely=0.304
                , relheight=0.072, relwidth=0.118)
        self.SpinboxRandOffsetSample.configure(activebackground="#f9f9f9")
        self.SpinboxRandOffsetSample.configure(background="white")
        self.SpinboxRandOffsetSample.configure(buttonbackground="#d9d9d9")
        self.SpinboxRandOffsetSample.configure(command=weapon_fire_loop_generator_ui_support.update_sample)
        self.SpinboxRandOffsetSample.configure(disabledforeground="#a3a3a3")
        self.SpinboxRandOffsetSample.configure(font="TkDefaultFont")
        self.SpinboxRandOffsetSample.configure(foreground="black")
        self.SpinboxRandOffsetSample.configure(highlightbackground="black")
        self.SpinboxRandOffsetSample.configure(highlightcolor="black")
        self.SpinboxRandOffsetSample.configure(insertbackground="black")
        self.SpinboxRandOffsetSample.configure(selectbackground="blue")
        self.SpinboxRandOffsetSample.configure(selectforeground="white")
        self.SpinboxRandOffsetSample.configure(textvariable=weapon_fire_loop_generator_ui_support.spinboxRandCents)
        self.SpinboxRandOffsetSample.bind('<KeyRelease>',lambda e:weapon_fire_loop_generator_ui_support.on_sample_props_changed(e))

        self.LabelRandOffset = tk.Label(self.FrameSampleProperties)
        self.LabelRandOffset.place(relx=0.044, rely=0.304, height=21, width=112)
        self.LabelRandOffset.configure(activebackground="#f9f9f9")
        self.LabelRandOffset.configure(activeforeground="black")
        self.LabelRandOffset.configure(anchor='nw')
        self.LabelRandOffset.configure(background="#d9d9d9")
        self.LabelRandOffset.configure(disabledforeground="#a3a3a3")
        self.LabelRandOffset.configure(foreground="#000000")
        self.LabelRandOffset.configure(highlightbackground="#d9d9d9")
        self.LabelRandOffset.configure(highlightcolor="black")
        self.LabelRandOffset.configure(text='''Rand Offset Cents''')

        self.LabelLoopFadeoutStart = tk.Label(self.FrameSampleProperties)
        self.LabelLoopFadeoutStart.place(relx=0.044, rely=0.418, height=21
                , width=130)
        self.LabelLoopFadeoutStart.configure(activebackground="#f9f9f9")
        self.LabelLoopFadeoutStart.configure(activeforeground="black")
        self.LabelLoopFadeoutStart.configure(anchor='nw')
        self.LabelLoopFadeoutStart.configure(background="#d9d9d9")
        self.LabelLoopFadeoutStart.configure(disabledforeground="#a3a3a3")
        self.LabelLoopFadeoutStart.configure(foreground="#000000")
        self.LabelLoopFadeoutStart.configure(highlightbackground="#d9d9d9")
        self.LabelLoopFadeoutStart.configure(highlightcolor="black")
        self.LabelLoopFadeoutStart.configure(text='''Loop Fadeout Start MS''')

        self.SpinboxLoopFadeoutStart = tk.Spinbox(self.FrameSampleProperties, from_=1.0, to=100.0)
        self.SpinboxLoopFadeoutStart.place(relx=0.372, rely=0.418
                , relheight=0.072, relwidth=0.116)
        self.SpinboxLoopFadeoutStart.configure(activebackground="#f9f9f9")
        self.SpinboxLoopFadeoutStart.configure(background="white")
        self.SpinboxLoopFadeoutStart.configure(buttonbackground="#d9d9d9")
        self.SpinboxLoopFadeoutStart.configure(command=weapon_fire_loop_generator_ui_support.update_sample)
        self.SpinboxLoopFadeoutStart.configure(disabledforeground="#a3a3a3")
        self.SpinboxLoopFadeoutStart.configure(font="TkDefaultFont")
        self.SpinboxLoopFadeoutStart.configure(foreground="black")
        self.SpinboxLoopFadeoutStart.configure(highlightbackground="black")
        self.SpinboxLoopFadeoutStart.configure(highlightcolor="black")
        self.SpinboxLoopFadeoutStart.configure(insertbackground="black")
        self.SpinboxLoopFadeoutStart.configure(selectbackground="blue")
        self.SpinboxLoopFadeoutStart.configure(selectforeground="white")
        self.SpinboxLoopFadeoutStart.configure(textvariable=weapon_fire_loop_generator_ui_support.spinboxLoopFadeoutStart)
        self.SpinboxLoopFadeoutStart.bind('<KeyRelease>',lambda e:weapon_fire_loop_generator_ui_support.on_sample_props_changed(e))

        self.LabelFadeoutLength = tk.Label(self.FrameSampleProperties)
        self.LabelFadeoutLength.place(relx=0.044, rely=0.532, height=21
                , width=150)
        self.LabelFadeoutLength.configure(activebackground="#f9f9f9")
        self.LabelFadeoutLength.configure(activeforeground="black")
        self.LabelFadeoutLength.configure(anchor='nw')
        self.LabelFadeoutLength.configure(background="#d9d9d9")
        self.LabelFadeoutLength.configure(disabledforeground="#a3a3a3")
        self.LabelFadeoutLength.configure(foreground="#000000")
        self.LabelFadeoutLength.configure(highlightbackground="#d9d9d9")
        self.LabelFadeoutLength.configure(highlightcolor="black")
        self.LabelFadeoutLength.configure(text='''Loop Fadeout Length MS''')

        self.SpinboxFadeoutLength = tk.Spinbox(self.FrameSampleProperties, from_=1.0, to=100.0)
        self.SpinboxFadeoutLength.place(relx=0.372, rely=0.532, relheight=0.072
                , relwidth=0.116)
        self.SpinboxFadeoutLength.configure(activebackground="#f9f9f9")
        self.SpinboxFadeoutLength.configure(background="white")
        self.SpinboxFadeoutLength.configure(buttonbackground="#d9d9d9")
        self.SpinboxFadeoutLength.configure(command=weapon_fire_loop_generator_ui_support.update_sample)
        self.SpinboxFadeoutLength.configure(disabledforeground="#a3a3a3")
        self.SpinboxFadeoutLength.configure(font="TkDefaultFont")
        self.SpinboxFadeoutLength.configure(foreground="black")
        self.SpinboxFadeoutLength.configure(highlightbackground="black")
        self.SpinboxFadeoutLength.configure(highlightcolor="black")
        self.SpinboxFadeoutLength.configure(insertbackground="black")
        self.SpinboxFadeoutLength.configure(selectbackground="blue")
        self.SpinboxFadeoutLength.configure(selectforeground="white")
        self.SpinboxFadeoutLength.configure(textvariable=weapon_fire_loop_generator_ui_support.spinboxLoopFadeoutLength)
        self.SpinboxFadeoutLength.bind('<KeyRelease>',lambda e:weapon_fire_loop_generator_ui_support.on_sample_props_changed(e))

        self.ButtonPlayLoopSample = tk.Button(self.FrameSampleProperties)
        self.ButtonPlayLoopSample.place(relx=0.656, rely=0.608, height=34
                , width=117)
        self.ButtonPlayLoopSample.configure(activebackground="#ececec")
        self.ButtonPlayLoopSample.configure(activeforeground="#000000")
        self.ButtonPlayLoopSample.configure(background="#d9d9d9")
        self.ButtonPlayLoopSample.configure(disabledforeground="#a3a3a3")
        self.ButtonPlayLoopSample.configure(foreground="#000000")
        self.ButtonPlayLoopSample.configure(highlightbackground="#d9d9d9")
        self.ButtonPlayLoopSample.configure(highlightcolor="black")
        self.ButtonPlayLoopSample.configure(pady="0")
        self.ButtonPlayLoopSample.configure(text='''Play Loop Sample''')
        self.ButtonPlayLoopSample.bind('<ButtonRelease-1>',lambda e:weapon_fire_loop_generator_ui_support.playLoopSampleButton(e))

        self.LabelCurrentSampleName = tk.Label(self.FrameSampleProperties)
        self.LabelCurrentSampleName.place(relx=0.044, rely=0.076, height=21
                , width=33)
        self.LabelCurrentSampleName.configure(activebackground="#f9f9f9")
        self.LabelCurrentSampleName.configure(activeforeground="black")
        self.LabelCurrentSampleName.configure(background="#d9d9d9")
        self.LabelCurrentSampleName.configure(disabledforeground="#a3a3a3")
        self.LabelCurrentSampleName.configure(foreground="#000000")
        self.LabelCurrentSampleName.configure(highlightbackground="#d9d9d9")
        self.LabelCurrentSampleName.configure(highlightcolor="black")
        self.LabelCurrentSampleName.configure(text='''Name''')

        self.CurrentSampleName = tk.Label(self.FrameSampleProperties)
        self.CurrentSampleName.place(relx=0.37, rely=0.076, height=21, width=252)

        self.CurrentSampleName.configure(activebackground="#f9f9f9")
        self.CurrentSampleName.configure(activeforeground="black")
        self.CurrentSampleName.configure(anchor='nw')
        self.CurrentSampleName.configure(background="#d9d9d9")
        self.CurrentSampleName.configure(disabledforeground="#a3a3a3")
        self.CurrentSampleName.configure(foreground="#000000")
        self.CurrentSampleName.configure(highlightbackground="#d9d9d9")
        self.CurrentSampleName.configure(highlightcolor="black")
        self.CurrentSampleName.configure(text='''Sample Name''')
        self.CurrentSampleName.configure(textvariable=weapon_fire_loop_generator_ui_support.labelCurrentSampleName)

        self.EntryHeadroomSample = tk.Entry(self.FrameSampleProperties)
        self.EntryHeadroomSample.place(relx=0.372, rely=0.19, height=20
                , relwidth=0.118)
        self.EntryHeadroomSample.configure(background="white")
        self.EntryHeadroomSample.configure(disabledforeground="#a3a3a3")
        self.EntryHeadroomSample.configure(font="TkFixedFont")
        self.EntryHeadroomSample.configure(foreground="#000000")
        self.EntryHeadroomSample.configure(highlightbackground="#d9d9d9")
        self.EntryHeadroomSample.configure(highlightcolor="black")
        self.EntryHeadroomSample.configure(insertbackground="black")
        on_sample_props_changed = self.EntryHeadroomSample.register(weapon_fire_loop_generator_ui_support.on_sample_props_changed)
        self.EntryHeadroomSample.configure(invalidcommand=(on_sample_props_changed))
        self.EntryHeadroomSample.configure(selectbackground="blue")
        self.EntryHeadroomSample.configure(selectforeground="white")
        self.EntryHeadroomSample.configure(textvariable=weapon_fire_loop_generator_ui_support.volumeHeadroomSample)
        self.EntryHeadroomSample.bind('<ButtonRelease-1>',lambda e:weapon_fire_loop_generator_ui_support.on_sample_props_changed(e))
        self.EntryHeadroomSample.bind('<KeyRelease>',lambda e:weapon_fire_loop_generator_ui_support.on_sample_props_changed(e))

        self.ButtonCopy = tk.Button(self.FrameSampleProperties)
        self.ButtonCopy.place(relx=0.656, rely=0.456, height=24, width=47)
        self.ButtonCopy.configure(activebackground="#ececec")
        self.ButtonCopy.configure(activeforeground="#000000")
        self.ButtonCopy.configure(background="#d9d9d9")
        self.ButtonCopy.configure(disabledforeground="#a3a3a3")
        self.ButtonCopy.configure(foreground="#000000")
        self.ButtonCopy.configure(highlightbackground="#d9d9d9")
        self.ButtonCopy.configure(highlightcolor="black")
        self.ButtonCopy.configure(pady="0")
        self.ButtonCopy.configure(text='''Copy''')
        self.ButtonCopy.bind('<Button-1>',lambda e:weapon_fire_loop_generator_ui_support.buttonCopy(e))

        self.ButtonPaste = tk.Button(self.FrameSampleProperties)
        self.ButtonPaste.place(relx=0.81, rely=0.456, height=24, width=47)
        self.ButtonPaste.configure(activebackground="#ececec")
        self.ButtonPaste.configure(activeforeground="#000000")
        self.ButtonPaste.configure(background="#d9d9d9")
        self.ButtonPaste.configure(disabledforeground="#a3a3a3")
        self.ButtonPaste.configure(foreground="#000000")
        self.ButtonPaste.configure(highlightbackground="#d9d9d9")
        self.ButtonPaste.configure(highlightcolor="black")
        self.ButtonPaste.configure(pady="0")
        self.ButtonPaste.configure(text='''Paste''')
        self.ButtonPaste.bind('<Button-1>',lambda e:weapon_fire_loop_generator_ui_support.buttonPaste(e))

        self.FrameSourceSamples = tk.Frame(top)
        self.FrameSourceSamples.place(relx=0.017, rely=0.051, relheight=0.444
                , relwidth=0.554)
        self.FrameSourceSamples.configure(relief='groove')
        self.FrameSourceSamples.configure(borderwidth="2")
        self.FrameSourceSamples.configure(relief="groove")
        self.FrameSourceSamples.configure(background="#d9d9d9")
        self.FrameSourceSamples.configure(highlightbackground="#d9d9d9")
        self.FrameSourceSamples.configure(highlightcolor="black")

        self.SourceFilesList = tk.Listbox(self.FrameSourceSamples)
        self.SourceFilesList.place(relx=0.015, rely=0.076, relheight=0.863
                , relwidth=0.773)
        self.SourceFilesList.configure(background="white")
        self.SourceFilesList.configure(disabledforeground="#a3a3a3")
        self.SourceFilesList.configure(font="-family {Courier New} -size 9")
        self.SourceFilesList.configure(foreground="#000000")
        self.SourceFilesList.configure(highlightbackground="#d9d9d9")
        self.SourceFilesList.configure(highlightcolor="black")
        self.SourceFilesList.configure(selectbackground="blue")
        self.SourceFilesList.configure(selectforeground="white")
        self.SourceFilesList.configure(selectmode='single')
        self.SourceFilesList.bind('<ButtonRelease-1>',lambda e:weapon_fire_loop_generator_ui_support.onSelect(e))
        self.SourceFilesList.bind('<FocusOut>',lambda e:weapon_fire_loop_generator_ui_support.on_sample_props_changed(e))

        self.ButtonOpenFiles = tk.Button(self.FrameSourceSamples)
        self.ButtonOpenFiles.place(relx=0.82, rely=0.061, height=44, width=87)
        self.ButtonOpenFiles.configure(activebackground="#ececec")
        self.ButtonOpenFiles.configure(activeforeground="#000000")
        self.ButtonOpenFiles.configure(background="#d9d9d9")
        self.ButtonOpenFiles.configure(disabledforeground="#a3a3a3")
        self.ButtonOpenFiles.configure(foreground="#000000")
        self.ButtonOpenFiles.configure(highlightbackground="#d9d9d9")
        self.ButtonOpenFiles.configure(highlightcolor="black")
        self.ButtonOpenFiles.configure(pady="0")
        self.ButtonOpenFiles.configure(text='''Open Files''')
        self.ButtonOpenFiles.bind('<ButtonRelease-1>',lambda e:weapon_fire_loop_generator_ui_support.openFilesButton(e))

        self.ButtonRemoveCurrent = tk.Button(self.FrameSourceSamples)
        self.ButtonRemoveCurrent.place(relx=0.822, rely=0.76, height=34
                , width=87)
        self.ButtonRemoveCurrent.configure(activebackground="#ececec")
        self.ButtonRemoveCurrent.configure(activeforeground="#000000")
        self.ButtonRemoveCurrent.configure(background="#d9d9d9")
        self.ButtonRemoveCurrent.configure(disabledforeground="#a3a3a3")
        self.ButtonRemoveCurrent.configure(foreground="#000000")
        self.ButtonRemoveCurrent.configure(highlightbackground="#d9d9d9")
        self.ButtonRemoveCurrent.configure(highlightcolor="black")
        self.ButtonRemoveCurrent.configure(pady="0")
        self.ButtonRemoveCurrent.configure(text='''Remove''')
        self.ButtonRemoveCurrent.bind('<ButtonRelease-1>',lambda e:weapon_fire_loop_generator_ui_support.removeCurrentSampleButton(e))

        self.ButtonReloadAllSamples = tk.Button(self.FrameSourceSamples)
        self.ButtonReloadAllSamples.place(relx=0.819, rely=0.247, height=34
                , width=87)
        self.ButtonReloadAllSamples.configure(activebackground="#ececec")
        self.ButtonReloadAllSamples.configure(activeforeground="#000000")
        self.ButtonReloadAllSamples.configure(background="#d9d9d9")
        self.ButtonReloadAllSamples.configure(disabledforeground="#a3a3a3")
        self.ButtonReloadAllSamples.configure(foreground="#000000")
        self.ButtonReloadAllSamples.configure(highlightbackground="#d9d9d9")
        self.ButtonReloadAllSamples.configure(highlightcolor="black")
        self.ButtonReloadAllSamples.configure(pady="0")
        self.ButtonReloadAllSamples.configure(text='''Reload All''')
        self.ButtonReloadAllSamples.bind('<Button-1>',lambda e:weapon_fire_loop_generator_ui_support.reloadAllSamplesButton(e))

        self.ButtonChangeSamplePathOfCurrent = tk.Button(self.FrameSourceSamples)
        self.ButtonChangeSamplePathOfCurrent.place(relx=0.822, rely=0.608
                , height=34, width=87)
        self.ButtonChangeSamplePathOfCurrent.configure(activebackground="#ececec")
        self.ButtonChangeSamplePathOfCurrent.configure(activeforeground="#000000")
        self.ButtonChangeSamplePathOfCurrent.configure(background="#d9d9d9")
        self.ButtonChangeSamplePathOfCurrent.configure(disabledforeground="#a3a3a3")
        self.ButtonChangeSamplePathOfCurrent.configure(foreground="#000000")
        self.ButtonChangeSamplePathOfCurrent.configure(highlightbackground="#d9d9d9")
        self.ButtonChangeSamplePathOfCurrent.configure(highlightcolor="black")
        self.ButtonChangeSamplePathOfCurrent.configure(pady="0")
        self.ButtonChangeSamplePathOfCurrent.configure(text='''Change Path''')
        self.ButtonChangeSamplePathOfCurrent.bind('<ButtonRelease-1>',lambda e:weapon_fire_loop_generator_ui_support.changePathOfCurrentSampleButton(e))

        self.LabelSourceSamples = tk.Label(top)
        self.LabelSourceSamples.place(relx=0.008, rely=0.022, height=32
                , width=131)
        self.LabelSourceSamples.configure(activebackground="#f9f9f9")
        self.LabelSourceSamples.configure(activeforeground="black")
        self.LabelSourceSamples.configure(background="#d9d9d9")
        self.LabelSourceSamples.configure(disabledforeground="#a3a3a3")
        self.LabelSourceSamples.configure(font="-family {Segoe UI} -size 12")
        self.LabelSourceSamples.configure(foreground="#000000")
        self.LabelSourceSamples.configure(highlightbackground="#f0f0f0f0f0f0")
        self.LabelSourceSamples.configure(highlightcolor="black")
        self.LabelSourceSamples.configure(highlightthickness="1")
        self.LabelSourceSamples.configure(relief="groove")
        self.LabelSourceSamples.configure(text='''Source Samples''')

        self.FrameLoopSettings = tk.Frame(top)
        self.FrameLoopSettings.place(relx=0.017, rely=0.541, relheight=0.427
                , relwidth=0.414)
        self.FrameLoopSettings.configure(relief='groove')
        self.FrameLoopSettings.configure(borderwidth="2")
        self.FrameLoopSettings.configure(relief="groove")
        self.FrameLoopSettings.configure(background="#d9d9d9")
        self.FrameLoopSettings.configure(highlightbackground="#d9d9d9")
        self.FrameLoopSettings.configure(highlightcolor="black")

        self.ButtonImportProject = tk.Button(self.FrameLoopSettings)
        self.ButtonImportProject.place(relx=0.016, rely=0.083, height=34
                , width=117)
        self.ButtonImportProject.configure(activebackground="#ececec")
        self.ButtonImportProject.configure(activeforeground="#000000")
        self.ButtonImportProject.configure(background="#d9d9d9")
        self.ButtonImportProject.configure(disabledforeground="#a3a3a3")
        self.ButtonImportProject.configure(foreground="#000000")
        self.ButtonImportProject.configure(highlightbackground="#d9d9d9")
        self.ButtonImportProject.configure(highlightcolor="black")
        self.ButtonImportProject.configure(pady="0")
        self.ButtonImportProject.configure(text='''Import Project''')
        self.ButtonImportProject.bind('<ButtonRelease-1>',lambda e:weapon_fire_loop_generator_ui_support.importProjectButton(e))

        self.ButtonExportProject = tk.Button(self.FrameLoopSettings)
        self.ButtonExportProject.place(relx=0.016, rely=0.292, height=34
                , width=117)
        self.ButtonExportProject.configure(activebackground="#ececec")
        self.ButtonExportProject.configure(activeforeground="#000000")
        self.ButtonExportProject.configure(background="#d9d9d9")
        self.ButtonExportProject.configure(disabledforeground="#a3a3a3")
        self.ButtonExportProject.configure(foreground="#000000")
        self.ButtonExportProject.configure(highlightbackground="#d9d9d9")
        self.ButtonExportProject.configure(highlightcolor="black")
        self.ButtonExportProject.configure(pady="0")
        self.ButtonExportProject.configure(text='''Export Project''')
        self.ButtonExportProject.bind('<ButtonRelease-1>',lambda e:weapon_fire_loop_generator_ui_support.exportProjectButton(e))

        self.SpinboxFireCount = tk.Spinbox(self.FrameLoopSettings, from_=1.0, to=100.0)
        self.SpinboxFireCount.place(relx=0.489, rely=0.083, relheight=0.079
                , relwidth=0.077)
        self.SpinboxFireCount.configure(activebackground="#f9f9f9")
        self.SpinboxFireCount.configure(background="white")
        self.SpinboxFireCount.configure(buttonbackground="#d9d9d9")
        self.SpinboxFireCount.configure(command=weapon_fire_loop_generator_ui_support.update_loop_settings)
        self.SpinboxFireCount.configure(disabledforeground="#a3a3a3")
        self.SpinboxFireCount.configure(font="TkDefaultFont")
        self.SpinboxFireCount.configure(foreground="black")
        self.SpinboxFireCount.configure(highlightbackground="black")
        self.SpinboxFireCount.configure(highlightcolor="black")
        self.SpinboxFireCount.configure(insertbackground="black")
        self.SpinboxFireCount.configure(selectbackground="blue")
        self.SpinboxFireCount.configure(selectforeground="white")
        self.SpinboxFireCount.configure(textvariable=weapon_fire_loop_generator_ui_support.spinboxFireCount)
        self.SpinboxFireCount.bind('<KeyRelease>',lambda e:weapon_fire_loop_generator_ui_support.on_loop_settings_changed(e))

        self.LabelFireCount = tk.Label(self.FrameLoopSettings)
        self.LabelFireCount.place(relx=0.285, rely=0.083, height=22, width=62)
        self.LabelFireCount.configure(activebackground="#f9f9f9")
        self.LabelFireCount.configure(activeforeground="black")
        self.LabelFireCount.configure(anchor='nw')
        self.LabelFireCount.configure(background="#d9d9d9")
        self.LabelFireCount.configure(disabledforeground="#a3a3a3")
        self.LabelFireCount.configure(foreground="#000000")
        self.LabelFireCount.configure(highlightbackground="#d9d9d9")
        self.LabelFireCount.configure(highlightcolor="black")
        self.LabelFireCount.configure(text='''Fire Count''')

        self.ButtonSetTargetDirectory = tk.Button(self.FrameLoopSettings)
        self.ButtonSetTargetDirectory.place(relx=0.02, rely=0.83, height=34
                , width=117)
        self.ButtonSetTargetDirectory.configure(activebackground="#ececec")
        self.ButtonSetTargetDirectory.configure(activeforeground="#000000")
        self.ButtonSetTargetDirectory.configure(background="#d9d9d9")
        self.ButtonSetTargetDirectory.configure(disabledforeground="#a3a3a3")
        self.ButtonSetTargetDirectory.configure(foreground="#000000")
        self.ButtonSetTargetDirectory.configure(highlightbackground="#d9d9d9")
        self.ButtonSetTargetDirectory.configure(highlightcolor="black")
        self.ButtonSetTargetDirectory.configure(pady="0")
        self.ButtonSetTargetDirectory.configure(text='''Set Target Directory''')
        self.ButtonSetTargetDirectory.bind('<ButtonRelease-1>',lambda e:weapon_fire_loop_generator_ui_support.setTargetDirectoryButton(e))

        self.CheckNormalizeLoop = tk.Checkbutton(self.FrameLoopSettings)
        self.CheckNormalizeLoop.place(relx=0.479, rely=0.336, relheight=0.103
                , relwidth=0.098)
        self.CheckNormalizeLoop.configure(activebackground="#ececec")
        self.CheckNormalizeLoop.configure(activeforeground="#000000")
        self.CheckNormalizeLoop.configure(anchor='nw')
        self.CheckNormalizeLoop.configure(background="#d9d9d9")
        self.CheckNormalizeLoop.configure(command=weapon_fire_loop_generator_ui_support.update_loop_settings)
        self.CheckNormalizeLoop.configure(disabledforeground="#a3a3a3")
        self.CheckNormalizeLoop.configure(foreground="#000000")
        self.CheckNormalizeLoop.configure(highlightbackground="#d9d9d9")
        self.CheckNormalizeLoop.configure(highlightcolor="black")
        self.CheckNormalizeLoop.configure(justify='left')
        self.CheckNormalizeLoop.configure(variable=weapon_fire_loop_generator_ui_support.checkNormalize)

        self.SpinboxSeed = tk.Spinbox(self.FrameLoopSettings, from_=1.0, to=100.0)
        self.SpinboxSeed.place(relx=0.853, rely=0.336, relheight=0.079
                , relwidth=0.077)
        self.SpinboxSeed.configure(activebackground="#f9f9f9")
        self.SpinboxSeed.configure(background="white")
        self.SpinboxSeed.configure(buttonbackground="#d9d9d9")
        self.SpinboxSeed.configure(command=weapon_fire_loop_generator_ui_support.update_loop_settings)
        self.SpinboxSeed.configure(disabledforeground="#a3a3a3")
        self.SpinboxSeed.configure(font="TkDefaultFont")
        self.SpinboxSeed.configure(foreground="black")
        self.SpinboxSeed.configure(highlightbackground="black")
        self.SpinboxSeed.configure(highlightcolor="black")
        self.SpinboxSeed.configure(insertbackground="black")
        self.SpinboxSeed.configure(selectbackground="blue")
        self.SpinboxSeed.configure(selectforeground="white")
        self.SpinboxSeed.configure(textvariable=weapon_fire_loop_generator_ui_support.spinboxSeed)
        self.SpinboxSeed.bind('<KeyRelease>',lambda e:weapon_fire_loop_generator_ui_support.on_loop_settings_changed(e))

        self.LabelSeed = tk.Label(self.FrameLoopSettings)
        self.LabelSeed.place(relx=0.67, rely=0.336, height=22, width=37)
        self.LabelSeed.configure(activebackground="#f9f9f9")
        self.LabelSeed.configure(activeforeground="black")
        self.LabelSeed.configure(anchor='nw')
        self.LabelSeed.configure(background="#d9d9d9")
        self.LabelSeed.configure(disabledforeground="#a3a3a3")
        self.LabelSeed.configure(foreground="#000000")
        self.LabelSeed.configure(highlightbackground="#d9d9d9")
        self.LabelSeed.configure(highlightcolor="black")
        self.LabelSeed.configure(text='''Seed''')

        self.LabelNormalize = tk.Label(self.FrameLoopSettings)
        self.LabelNormalize.place(relx=0.285, rely=0.336, height=22, width=89)
        self.LabelNormalize.configure(activebackground="#f9f9f9")
        self.LabelNormalize.configure(activeforeground="black")
        self.LabelNormalize.configure(anchor='nw')
        self.LabelNormalize.configure(background="#d9d9d9")
        self.LabelNormalize.configure(disabledforeground="#a3a3a3")
        self.LabelNormalize.configure(foreground="#000000")
        self.LabelNormalize.configure(highlightbackground="#d9d9d9")
        self.LabelNormalize.configure(highlightcolor="black")
        self.LabelNormalize.configure(text='''Normalize''')

        self.LabelTargetPatch = tk.Label(self.FrameLoopSettings)
        self.LabelTargetPatch.place(relx=0.265, rely=0.87, height=22, width=338)
        self.LabelTargetPatch.configure(activebackground="#f9f9f9")
        self.LabelTargetPatch.configure(activeforeground="black")
        self.LabelTargetPatch.configure(background="#d9d9d9")
        self.LabelTargetPatch.configure(disabledforeground="#a3a3a3")
        self.LabelTargetPatch.configure(foreground="#000000")
        self.LabelTargetPatch.configure(highlightbackground="#d9d9d9")
        self.LabelTargetPatch.configure(highlightcolor="black")
        self.LabelTargetPatch.configure(text='''Please Set Target Path''')
        self.LabelTargetPatch.configure(textvariable=weapon_fire_loop_generator_ui_support.labelTargetDirectory)

        self.SpinboxRPM = tk.Spinbox(self.FrameLoopSettings, from_=1.0, to=100.0)
        self.SpinboxRPM.place(relx=0.853, rely=0.083, relheight=0.079
                , relwidth=0.077)
        self.SpinboxRPM.configure(activebackground="#f9f9f9")
        self.SpinboxRPM.configure(background="white")
        self.SpinboxRPM.configure(buttonbackground="#d9d9d9")
        self.SpinboxRPM.configure(command=weapon_fire_loop_generator_ui_support.update_loop_settings)
        self.SpinboxRPM.configure(disabledforeground="#a3a3a3")
        self.SpinboxRPM.configure(font="TkDefaultFont")
        self.SpinboxRPM.configure(foreground="black")
        self.SpinboxRPM.configure(highlightbackground="black")
        self.SpinboxRPM.configure(highlightcolor="black")
        self.SpinboxRPM.configure(insertbackground="black")
        self.SpinboxRPM.configure(selectbackground="blue")
        self.SpinboxRPM.configure(selectforeground="white")
        self.SpinboxRPM.configure(textvariable=weapon_fire_loop_generator_ui_support.spinboxRPM)
        self.SpinboxRPM.bind('<KeyRelease>',lambda e:weapon_fire_loop_generator_ui_support.on_loop_settings_changed(e))

        self.LabelRPM = tk.Label(self.FrameLoopSettings)
        self.LabelRPM.place(relx=0.67, rely=0.083, height=22, width=28)
        self.LabelRPM.configure(activebackground="#f9f9f9")
        self.LabelRPM.configure(activeforeground="black")
        self.LabelRPM.configure(anchor='nw')
        self.LabelRPM.configure(background="#d9d9d9")
        self.LabelRPM.configure(disabledforeground="#a3a3a3")
        self.LabelRPM.configure(foreground="#000000")
        self.LabelRPM.configure(highlightbackground="#d9d9d9")
        self.LabelRPM.configure(highlightcolor="black")
        self.LabelRPM.configure(text='''RPM''')

        self.LabelRPMBurst = tk.Label(self.FrameLoopSettings)
        self.LabelRPMBurst.place(relx=0.67, rely=0.209, height=22, width=61)
        self.LabelRPMBurst.configure(activebackground="#f9f9f9")
        self.LabelRPMBurst.configure(activeforeground="black")
        self.LabelRPMBurst.configure(anchor='nw')
        self.LabelRPMBurst.configure(background="#d9d9d9")
        self.LabelRPMBurst.configure(disabledforeground="#a3a3a3")
        self.LabelRPMBurst.configure(foreground="#000000")
        self.LabelRPMBurst.configure(highlightbackground="#d9d9d9")
        self.LabelRPMBurst.configure(highlightcolor="black")
        self.LabelRPMBurst.configure(text='''RPM Burst''')

        self.SpinboxRPMBurst = tk.Spinbox(self.FrameLoopSettings, from_=1.0, to=100.0)
        self.SpinboxRPMBurst.place(relx=0.853, rely=0.209, relheight=0.079
                , relwidth=0.077)
        self.SpinboxRPMBurst.configure(activebackground="#f9f9f9")
        self.SpinboxRPMBurst.configure(background="white")
        self.SpinboxRPMBurst.configure(buttonbackground="#d9d9d9")
        self.SpinboxRPMBurst.configure(command=weapon_fire_loop_generator_ui_support.update_loop_settings)
        self.SpinboxRPMBurst.configure(disabledforeground="#a3a3a3")
        self.SpinboxRPMBurst.configure(font="TkDefaultFont")
        self.SpinboxRPMBurst.configure(foreground="black")
        self.SpinboxRPMBurst.configure(highlightbackground="black")
        self.SpinboxRPMBurst.configure(highlightcolor="black")
        self.SpinboxRPMBurst.configure(insertbackground="black")
        self.SpinboxRPMBurst.configure(selectbackground="blue")
        self.SpinboxRPMBurst.configure(selectforeground="white")
        self.SpinboxRPMBurst.configure(textvariable=weapon_fire_loop_generator_ui_support.spinboxRPMBurst)
        self.SpinboxRPMBurst.bind('<KeyRelease>',lambda e:weapon_fire_loop_generator_ui_support.on_loop_settings_changed(e))

        self.LabelBurstCount = tk.Label(self.FrameLoopSettings)
        self.LabelBurstCount.place(relx=0.285, rely=0.209, height=22, width=82)
        self.LabelBurstCount.configure(activebackground="#f9f9f9")
        self.LabelBurstCount.configure(activeforeground="black")
        self.LabelBurstCount.configure(anchor='nw')
        self.LabelBurstCount.configure(background="#d9d9d9")
        self.LabelBurstCount.configure(disabledforeground="#a3a3a3")
        self.LabelBurstCount.configure(foreground="#000000")
        self.LabelBurstCount.configure(highlightbackground="#d9d9d9")
        self.LabelBurstCount.configure(highlightcolor="black")
        self.LabelBurstCount.configure(text='''Burst Count''')

        self.SpinboxBurstCount = tk.Spinbox(self.FrameLoopSettings, from_=1.0, to=100.0)
        self.SpinboxBurstCount.place(relx=0.489, rely=0.198, relheight=0.079
                , relwidth=0.077)
        self.SpinboxBurstCount.configure(activebackground="#f9f9f9")
        self.SpinboxBurstCount.configure(background="white")
        self.SpinboxBurstCount.configure(buttonbackground="#d9d9d9")
        self.SpinboxBurstCount.configure(command=weapon_fire_loop_generator_ui_support.update_loop_settings)
        self.SpinboxBurstCount.configure(disabledforeground="#a3a3a3")
        self.SpinboxBurstCount.configure(font="TkDefaultFont")
        self.SpinboxBurstCount.configure(foreground="black")
        self.SpinboxBurstCount.configure(highlightbackground="black")
        self.SpinboxBurstCount.configure(highlightcolor="black")
        self.SpinboxBurstCount.configure(insertbackground="black")
        self.SpinboxBurstCount.configure(selectbackground="blue")
        self.SpinboxBurstCount.configure(selectforeground="white")
        self.SpinboxBurstCount.configure(textvariable=weapon_fire_loop_generator_ui_support.spinboxBurstCount)
        self.SpinboxBurstCount.bind('<KeyRelease>',lambda e:weapon_fire_loop_generator_ui_support.on_loop_settings_changed(e))

        self.LabelPrefix = tk.Label(self.FrameLoopSettings)
        self.LabelPrefix.place(relx=0.285, rely=0.711, height=22, width=37)
        self.LabelPrefix.configure(activebackground="#f9f9f9")
        self.LabelPrefix.configure(activeforeground="black")
        self.LabelPrefix.configure(anchor='nw')
        self.LabelPrefix.configure(background="#d9d9d9")
        self.LabelPrefix.configure(disabledforeground="#a3a3a3")
        self.LabelPrefix.configure(foreground="#000000")
        self.LabelPrefix.configure(highlightbackground="#d9d9d9")
        self.LabelPrefix.configure(highlightcolor="black")
        self.LabelPrefix.configure(text='''Prefix''')

        self.EntryPrefix = tk.Entry(self.FrameLoopSettings)
        self.EntryPrefix.place(relx=0.489, rely=0.711, height=20, relwidth=0.436)

        self.EntryPrefix.configure(background="white")
        self.EntryPrefix.configure(disabledforeground="#a3a3a3")
        self.EntryPrefix.configure(font="TkFixedFont")
        self.EntryPrefix.configure(foreground="#000000")
        self.EntryPrefix.configure(highlightbackground="#d9d9d9")
        self.EntryPrefix.configure(highlightcolor="black")
        self.EntryPrefix.configure(insertbackground="black")
        self.EntryPrefix.configure(selectbackground="blue")
        self.EntryPrefix.configure(selectforeground="white")
        self.EntryPrefix.configure(textvariable=weapon_fire_loop_generator_ui_support.textPrefix)
        self.EntryPrefix.bind('<ButtonRelease-1>',lambda e:weapon_fire_loop_generator_ui_support.on_loop_settings_changed(e))
        self.EntryPrefix.bind('<KeyRelease>',lambda e:weapon_fire_loop_generator_ui_support.on_loop_settings_changed(e))

        self.LabelMonoLoop = tk.Label(self.FrameLoopSettings)
        self.LabelMonoLoop.place(relx=0.285, rely=0.474, height=21, width=68)
        self.LabelMonoLoop.configure(activebackground="#f9f9f9")
        self.LabelMonoLoop.configure(activeforeground="black")
        self.LabelMonoLoop.configure(anchor='nw')
        self.LabelMonoLoop.configure(background="#d9d9d9")
        self.LabelMonoLoop.configure(disabledforeground="#a3a3a3")
        self.LabelMonoLoop.configure(foreground="#000000")
        self.LabelMonoLoop.configure(highlightbackground="#d9d9d9")
        self.LabelMonoLoop.configure(highlightcolor="black")
        self.LabelMonoLoop.configure(text='''Mono Loop''')

        self.LabelMonoTail = tk.Label(self.FrameLoopSettings)
        self.LabelMonoTail.place(relx=0.672, rely=0.474, height=21, width=59)
        self.LabelMonoTail.configure(activebackground="#f9f9f9")
        self.LabelMonoTail.configure(activeforeground="black")
        self.LabelMonoTail.configure(anchor='nw')
        self.LabelMonoTail.configure(background="#d9d9d9")
        self.LabelMonoTail.configure(disabledforeground="#a3a3a3")
        self.LabelMonoTail.configure(foreground="#000000")
        self.LabelMonoTail.configure(highlightbackground="#d9d9d9")
        self.LabelMonoTail.configure(highlightcolor="black")
        self.LabelMonoTail.configure(text='''Mono Tail''')

        self.CheckbuttonMonoLoop = tk.Checkbutton(self.FrameLoopSettings)
        self.CheckbuttonMonoLoop.place(relx=0.479, rely=0.474, relheight=0.099
                , relwidth=0.057)
        self.CheckbuttonMonoLoop.configure(activebackground="#ececec")
        self.CheckbuttonMonoLoop.configure(activeforeground="#000000")
        self.CheckbuttonMonoLoop.configure(anchor='nw')
        self.CheckbuttonMonoLoop.configure(background="#d9d9d9")
        self.CheckbuttonMonoLoop.configure(command=weapon_fire_loop_generator_ui_support.update_loop_settings)
        self.CheckbuttonMonoLoop.configure(disabledforeground="#a3a3a3")
        self.CheckbuttonMonoLoop.configure(foreground="#000000")
        self.CheckbuttonMonoLoop.configure(highlightbackground="#d9d9d9")
        self.CheckbuttonMonoLoop.configure(highlightcolor="black")
        self.CheckbuttonMonoLoop.configure(justify='left')
        self.CheckbuttonMonoLoop.configure(variable=weapon_fire_loop_generator_ui_support.checkMonoLoop)

        self.CheckbuttonMonoTail = tk.Checkbutton(self.FrameLoopSettings)
        self.CheckbuttonMonoTail.place(relx=0.845, rely=0.474, relheight=0.099
                , relwidth=0.057)
        self.CheckbuttonMonoTail.configure(activebackground="#ececec")
        self.CheckbuttonMonoTail.configure(activeforeground="#000000")
        self.CheckbuttonMonoTail.configure(background="#d9d9d9")
        self.CheckbuttonMonoTail.configure(command=weapon_fire_loop_generator_ui_support.update_loop_settings)
        self.CheckbuttonMonoTail.configure(disabledforeground="#a3a3a3")
        self.CheckbuttonMonoTail.configure(foreground="#000000")
        self.CheckbuttonMonoTail.configure(highlightbackground="#d9d9d9")
        self.CheckbuttonMonoTail.configure(highlightcolor="black")
        self.CheckbuttonMonoTail.configure(justify='left')
        self.CheckbuttonMonoTail.configure(variable=weapon_fire_loop_generator_ui_support.checkMonoTail)

        self.LabelVariations = tk.Label(self.FrameLoopSettings)
        self.LabelVariations.place(relx=0.285, rely=0.593, height=21, width=74)
        self.LabelVariations.configure(activebackground="#f9f9f9")
        self.LabelVariations.configure(activeforeground="black")
        self.LabelVariations.configure(anchor='nw')
        self.LabelVariations.configure(background="#d9d9d9")
        self.LabelVariations.configure(disabledforeground="#a3a3a3")
        self.LabelVariations.configure(foreground="#000000")
        self.LabelVariations.configure(highlightbackground="#d9d9d9")
        self.LabelVariations.configure(highlightcolor="black")
        self.LabelVariations.configure(text='''Variations''')

        self.SpinboxVariations = tk.Spinbox(self.FrameLoopSettings, from_=1.0, to=100.0)
        self.SpinboxVariations.place(relx=0.489, rely=0.593, relheight=0.075
                , relwidth=0.071)
        self.SpinboxVariations.configure(activebackground="#f9f9f9")
        self.SpinboxVariations.configure(background="white")
        self.SpinboxVariations.configure(buttonbackground="#d9d9d9")
        self.SpinboxVariations.configure(command=weapon_fire_loop_generator_ui_support.update_loop_settings)
        self.SpinboxVariations.configure(disabledforeground="#a3a3a3")
        self.SpinboxVariations.configure(font="TkDefaultFont")
        self.SpinboxVariations.configure(foreground="black")
        self.SpinboxVariations.configure(highlightbackground="black")
        self.SpinboxVariations.configure(highlightcolor="black")
        self.SpinboxVariations.configure(insertbackground="black")
        self.SpinboxVariations.configure(selectbackground="blue")
        self.SpinboxVariations.configure(selectforeground="white")
        self.SpinboxVariations.configure(textvariable=weapon_fire_loop_generator_ui_support.spinboxVariations)
        self.SpinboxVariations.bind('<KeyRelease>',lambda e:weapon_fire_loop_generator_ui_support.on_loop_settings_changed(e))

        self.LabelLoopSettings = tk.Label(top)
        self.LabelLoopSettings.place(relx=0.008, rely=0.507, height=32
                , width=138)
        self.LabelLoopSettings.configure(activebackground="#f9f9f9")
        self.LabelLoopSettings.configure(activeforeground="black")
        self.LabelLoopSettings.configure(background="#d9d9d9")
        self.LabelLoopSettings.configure(disabledforeground="#a3a3a3")
        self.LabelLoopSettings.configure(font="-family {Segoe UI} -size 12")
        self.LabelLoopSettings.configure(foreground="#000000")
        self.LabelLoopSettings.configure(highlightbackground="#d9d9d9")
        self.LabelLoopSettings.configure(highlightcolor="black")
        self.LabelLoopSettings.configure(relief="groove")
        self.LabelLoopSettings.configure(text='''Loop Settings''')

        self.FramePreview = tk.Frame(top)
        self.FramePreview.place(relx=0.456, rely=0.541, relheight=0.427
                , relwidth=0.238)
        self.FramePreview.configure(relief='groove')
        self.FramePreview.configure(borderwidth="2")
        self.FramePreview.configure(relief="groove")
        self.FramePreview.configure(background="#d9d9d9")
        self.FramePreview.configure(highlightbackground="#d9d9d9")
        self.FramePreview.configure(highlightcolor="black")

        self.ButtonPlayPreview = tk.Button(self.FramePreview)
        self.ButtonPlayPreview.place(relx=0.035, rely=0.711, height=34
                , width=130)
        self.ButtonPlayPreview.configure(activebackground="#ececec")
        self.ButtonPlayPreview.configure(activeforeground="#000000")
        self.ButtonPlayPreview.configure(background="#d9d9d9")
        self.ButtonPlayPreview.configure(disabledforeground="#a3a3a3")
        self.ButtonPlayPreview.configure(foreground="#000000")
        self.ButtonPlayPreview.configure(highlightbackground="#d9d9d9")
        self.ButtonPlayPreview.configure(highlightcolor="black")
        self.ButtonPlayPreview.configure(pady="0")
        self.ButtonPlayPreview.configure(text='''Play''')
        self.ButtonPlayPreview.bind('<ButtonRelease-1>',lambda e:weapon_fire_loop_generator_ui_support.playPreviewButton(e))

        self.ButtonRegenerateLoop = tk.Button(self.FramePreview)
        self.ButtonRegenerateLoop.place(relx=0.035, rely=0.079, height=34
                , width=130)
        self.ButtonRegenerateLoop.configure(activebackground="#ececec")
        self.ButtonRegenerateLoop.configure(activeforeground="#000000")
        self.ButtonRegenerateLoop.configure(background="#d9d9d9")
        self.ButtonRegenerateLoop.configure(disabledforeground="#a3a3a3")
        self.ButtonRegenerateLoop.configure(foreground="#000000")
        self.ButtonRegenerateLoop.configure(highlightbackground="#d9d9d9")
        self.ButtonRegenerateLoop.configure(highlightcolor="black")
        self.ButtonRegenerateLoop.configure(pady="0")
        self.ButtonRegenerateLoop.configure(text='''Regenerate Loop''')
        self.ButtonRegenerateLoop.bind('<ButtonRelease-1>',lambda e:weapon_fire_loop_generator_ui_support.playPreviewButton(e))

        self.ButtonRegenerateBurst = tk.Button(self.FramePreview)
        self.ButtonRegenerateBurst.place(relx=0.035, rely=0.277, height=34
                , width=130)
        self.ButtonRegenerateBurst.configure(activebackground="#ececec")
        self.ButtonRegenerateBurst.configure(activeforeground="#000000")
        self.ButtonRegenerateBurst.configure(background="#d9d9d9")
        self.ButtonRegenerateBurst.configure(disabledforeground="#a3a3a3")
        self.ButtonRegenerateBurst.configure(foreground="#000000")
        self.ButtonRegenerateBurst.configure(highlightbackground="#d9d9d9")
        self.ButtonRegenerateBurst.configure(highlightcolor="black")
        self.ButtonRegenerateBurst.configure(pady="0")
        self.ButtonRegenerateBurst.configure(text='''Regenerate Burst''')
        self.ButtonRegenerateBurst.bind('<ButtonRelease-1>',lambda e:weapon_fire_loop_generator_ui_support.regeneratePreviewBurstButton(e))

        self.LabelMaxPreview = tk.Label(self.FramePreview)
        self.LabelMaxPreview.place(relx=0.567, rely=0.198, height=22, width=58)
        self.LabelMaxPreview.configure(activebackground="#f9f9f9")
        self.LabelMaxPreview.configure(activeforeground="black")
        self.LabelMaxPreview.configure(anchor='nw')
        self.LabelMaxPreview.configure(background="#d9d9d9")
        self.LabelMaxPreview.configure(disabledforeground="#a3a3a3")
        self.LabelMaxPreview.configure(foreground="#000000")
        self.LabelMaxPreview.configure(highlightbackground="#d9d9d9")
        self.LabelMaxPreview.configure(highlightcolor="black")
        self.LabelMaxPreview.configure(text='''max dBFS''')

        self.LabelAVGPreview = tk.Label(self.FramePreview)
        self.LabelAVGPreview.place(relx=0.567, rely=0.277, height=22, width=47)
        self.LabelAVGPreview.configure(activebackground="#f9f9f9")
        self.LabelAVGPreview.configure(activeforeground="black")
        self.LabelAVGPreview.configure(anchor='nw')
        self.LabelAVGPreview.configure(background="#d9d9d9")
        self.LabelAVGPreview.configure(disabledforeground="#a3a3a3")
        self.LabelAVGPreview.configure(foreground="#000000")
        self.LabelAVGPreview.configure(highlightbackground="#d9d9d9")
        self.LabelAVGPreview.configure(highlightcolor="black")
        self.LabelAVGPreview.configure(text='''dBFS''')

        self.MaxVolumePreview = tk.Label(self.FramePreview)
        self.MaxVolumePreview.place(relx=0.816, rely=0.198, height=22, width=43)
        self.MaxVolumePreview.configure(activebackground="#f9f9f9")
        self.MaxVolumePreview.configure(activeforeground="black")
        self.MaxVolumePreview.configure(anchor='nw')
        self.MaxVolumePreview.configure(background="#d9d9d9")
        self.MaxVolumePreview.configure(disabledforeground="#a3a3a3")
        self.MaxVolumePreview.configure(foreground="#000000")
        self.MaxVolumePreview.configure(highlightbackground="#d9d9d9")
        self.MaxVolumePreview.configure(highlightcolor="black")
        self.MaxVolumePreview.configure(text='''-12''')
        self.MaxVolumePreview.configure(textvariable=weapon_fire_loop_generator_ui_support.maxVolumePreview)

        self.AVGVolumePreview = tk.Label(self.FramePreview)
        self.AVGVolumePreview.place(relx=0.816, rely=0.277, height=22, width=40)
        self.AVGVolumePreview.configure(activebackground="#f9f9f9")
        self.AVGVolumePreview.configure(activeforeground="black")
        self.AVGVolumePreview.configure(anchor='nw')
        self.AVGVolumePreview.configure(background="#d9d9d9")
        self.AVGVolumePreview.configure(disabledforeground="#a3a3a3")
        self.AVGVolumePreview.configure(foreground="#000000")
        self.AVGVolumePreview.configure(highlightbackground="#d9d9d9")
        self.AVGVolumePreview.configure(highlightcolor="black")
        self.AVGVolumePreview.configure(text='''-12''')
        self.AVGVolumePreview.configure(textvariable=weapon_fire_loop_generator_ui_support.avgVolumePreview)

        self.LabelVolumePreview = tk.Label(self.FramePreview)
        self.LabelVolumePreview.place(relx=0.567, rely=0.119, height=22
                , width=48)
        self.LabelVolumePreview.configure(activebackground="#f9f9f9")
        self.LabelVolumePreview.configure(activeforeground="black")
        self.LabelVolumePreview.configure(anchor='nw')
        self.LabelVolumePreview.configure(background="#d9d9d9")
        self.LabelVolumePreview.configure(disabledforeground="#a3a3a3")
        self.LabelVolumePreview.configure(foreground="#000000")
        self.LabelVolumePreview.configure(highlightbackground="#d9d9d9")
        self.LabelVolumePreview.configure(highlightcolor="black")
        self.LabelVolumePreview.configure(text='''Volume''')

        self.LabelPreview = tk.Label(top)
        self.LabelPreview.place(relx=0.448, rely=0.507, height=32, width=102)
        self.LabelPreview.configure(activebackground="#f9f9f9")
        self.LabelPreview.configure(activeforeground="black")
        self.LabelPreview.configure(background="#d9d9d9")
        self.LabelPreview.configure(disabledforeground="#a3a3a3")
        self.LabelPreview.configure(font="-family {Segoe UI} -size 12")
        self.LabelPreview.configure(foreground="#000000")
        self.LabelPreview.configure(highlightbackground="#d9d9d9")
        self.LabelPreview.configure(highlightcolor="black")
        self.LabelPreview.configure(relief="groove")
        self.LabelPreview.configure(text='''Preview''')

        self.ButtonGenerateGameFiles = tk.Button(top)
        self.ButtonGenerateGameFiles.place(relx=0.768, rely=0.659, height=104
                , width=177)
        self.ButtonGenerateGameFiles.configure(activebackground="#ececec")
        self.ButtonGenerateGameFiles.configure(activeforeground="#000000")
        self.ButtonGenerateGameFiles.configure(background="#d9d9d9")
        self.ButtonGenerateGameFiles.configure(disabledforeground="#a3a3a3")
        self.ButtonGenerateGameFiles.configure(foreground="#000000")
        self.ButtonGenerateGameFiles.configure(highlightbackground="#d9d9d9")
        self.ButtonGenerateGameFiles.configure(highlightcolor="black")
        self.ButtonGenerateGameFiles.configure(pady="0")
        self.ButtonGenerateGameFiles.configure(text='''Generate Game Files''')
        self.ButtonGenerateGameFiles.bind('<Button-1>',lambda e:weapon_fire_loop_generator_ui_support.generateGameFilesButton(e))

        self.LabelSampleProperties = tk.Label(top)
        self.LabelSampleProperties.place(relx=0.591, rely=0.017, height=31
                , width=152)
        self.LabelSampleProperties.configure(activebackground="#f9f9f9")
        self.LabelSampleProperties.configure(activeforeground="black")
        self.LabelSampleProperties.configure(background="#d9d9d9")
        self.LabelSampleProperties.configure(disabledforeground="#a3a3a3")
        self.LabelSampleProperties.configure(font="-family {Segoe UI} -size 12")
        self.LabelSampleProperties.configure(foreground="#000000")
        self.LabelSampleProperties.configure(highlightbackground="#d9d9d9")
        self.LabelSampleProperties.configure(highlightcolor="black")
        self.LabelSampleProperties.configure(relief="groove")
        self.LabelSampleProperties.configure(text='''Sample Properties''')

        self.LabelAppLog = tk.Label(top)
        self.LabelAppLog.place(relx=0.7, rely=0.895, height=21, width=336)
        self.LabelAppLog.configure(activebackground="#f9f9f9")
        self.LabelAppLog.configure(activeforeground="black")
        self.LabelAppLog.configure(background="#d9d9d9")
        self.LabelAppLog.configure(disabledforeground="#a3a3a3")
        self.LabelAppLog.configure(foreground="#000000")
        self.LabelAppLog.configure(highlightbackground="#d9d9d9")
        self.LabelAppLog.configure(highlightcolor="black")
        self.LabelAppLog.configure(text='''Ready''')
        self.LabelAppLog.configure(textvariable=weapon_fire_loop_generator_ui_support.labelAppLog)

if __name__ == '__main__':
    vp_start_gui()





